import UIKit

/* Protocols : Method (fonksiyon), property (Ã¶zellikler) taslak olarak tanÄ±mlamanÄ±za olanak saÄŸlayan yapÄ±lara denir. Struct, Class, Enum gibi yapÄ±lara uygulanabilir. OOP KavramÄ±nÄ±n eksikliklerine Ã§Ã¶zÃ¼m getirmek iÃ§in ortaya atÄ±lmÄ±ÅŸtÄ±r. POP (Protocol Oriented Programing) olarak da anÄ±lÄ±r */

//SÃ¶zleÅŸme gibidir uyulmasÄ± zorunludur.
//Class yapÄ±larÄ±nda 2 tane Miras alÄ±mÄ± yoktur.
//Protocollerde birden fazla miras alma olayÄ± vardÄ±r.

protocol Oyuncu{
    var isim:String {get}
    var canliMi:Bool { get set } //Hem can hem vurulabilir. Hem okumak hem iÅŸleme olduÄŸu iÃ§in getset
    var canSayisi:Int { get set }

}

extension Oyuncu{
    mutating func vurulma() {
        //KiÅŸi vurulduysa
        if canSayisi > 0{ //Hala canÄ± var mÄ±?
            canSayisi -= 1
            if canSayisi == 0{
                canliMi = false //oyuncu Ã¶ldÃ¼
            }else{
                canliMi = false //Zaten Ã¶lmÃ¼ÅŸ
            }
        }
        let durum = canliMi ? String(repeating:"ğŸ§¡",count:canSayisi) : "ğŸ”„"
        print("\(isim) : \(durum)")
    }
}

class SavasOyunu:Oyuncu{
    var isim: String
    var canliMi: Bool = true // Oyuna ilk baÅŸlayan kiÅŸi. BaÅŸlangÄ±Ã§ta canlÄ±
    var canSayisi: Int = 3 // 3 Can hakkÄ± vardÄ±r
    
    init(isim:String) {
        self.isim = isim
    }
}

var GTA = SavasOyunu(isim: "Swift")
GTA.canSayisi
GTA.vurulma()
GTA.canSayisi
GTA.vurulma()
GTA.vurulma()


//Protocols ve Generics

//Ã–rnek
func karsilastirInt(x:Int, y:Int) ->Bool {
    if (x<y) {
        print("Ä°lk SayÄ± ikinci sayÄ±dan kÃ¼Ã§Ã¼ktÃ¼r")
        return x < y
    }
    else{
        print("Ä°lk SayÄ± ikinci sayÄ±dan BÃ¼yÃ¼ktÃ¼r")
       return y < y
    }
}

karsilastirInt(x: 5, y: 4)

//Protocol yardÄ±mÄ± ile < iÅŸlemini tanÄ±mlama

protocol Kucuktur{
    static func <(lhs: Self, rhs: Self)-> Bool
}

//Generics ile nasÄ±l yapÄ±lÄ±r?

func karsilastir<T:Kucuktur>(x: T,y: T)->Bool{
    
    if (x<y) {
        print("Ä°lk SayÄ± ikinci sayÄ±dan kÃ¼Ã§Ã¼ktÃ¼r")
        return x < y
    }
    else{
        print("Ä°lk SayÄ± ikinci sayÄ±dan BÃ¼yÃ¼ktÃ¼r")
        return y < y
    } // Protocol tanÄ±mlamasaydÄ±k kÃ¼Ã§Ã¼ktÃ¼r deÄŸerini kullanamayacaktÄ±k
}

//
extension Int:Kucuktur{}
extension Double:Kucuktur{}

karsilastirInt(x: 5, y: 4) //extension yazarak Int deÄŸerlerini geÃ§erli kÄ±ldÄ±k



